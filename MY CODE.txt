 // add underground map pieces to the list 
                    undergroundmaplist.Add(Content.Load<Texture2D>("Maps\\11.png"));
                    undergroundmaplist.Add(Content.Load<Texture2D>("Maps\\12.png"));
                    undergroundmaplist.Add(Content.Load<Texture2D>("Maps\\13.png"));

                    undergroundmaplist.Add(Content.Load<Texture2D>("Maps\\21.png"));
                    undergroundmaplist.Add(Content.Load<Texture2D>("Maps\\22.png"));
                    undergroundmaplist.Add(Content.Load<Texture2D>("Maps\\23.png"));

                    undergroundmaplist.Add(Content.Load<Texture2D>("Maps\\31.png"));
                    undergroundmaplist.Add(Content.Load<Texture2D>("Maps\\32.png"));
                    undergroundmaplist.Add(Content.Load<Texture2D>("Maps\\33.png"));

                    // 2737 2965 dimensions for each underground piece 
                    switch (manager.CurLevel)
                    {
                        case 1:
                            mapBatch.Draw(upperground, new Rectangle(-4000, -7600, 5000, 8000), Color.White); break;
                        case 2:
                            mapBatch.Draw(undergroundmaplist[0], new Rectangle(0, 0, 2737, 2965), Color.White);
                            mapBatch.Draw(undergroundmaplist[1], new Rectangle(2737, 0, 2737, 2965), Color.White);
                            mapBatch.Draw(undergroundmaplist[2], new Rectangle(5469, 0, 2737, 2965), Color.White);

                            mapBatch.Draw(undergroundmaplist[3], new Rectangle(0, 2965, 2737, 2965), Color.White);
                            mapBatch.Draw(undergroundmaplist[4], new Rectangle(2750, 2965, 2737, 2965), Color.White);
                            mapBatch.Draw(undergroundmaplist[5], new Rectangle(5469, 2965, 2737, 2965), Color.White);

                            mapBatch.Draw(undergroundmaplist[6], new Rectangle(0, 5930, 2737, 2965), Color.White);
                            mapBatch.Draw(undergroundmaplist[7], new Rectangle(2750, 5930, 2737, 2965), Color.White);
                            mapBatch.Draw(undergroundmaplist[8], new Rectangle(5469, 5930, 2737, 2965), Color.White); break;
                    }




Level Manager class : 

  // 2737 2965 dimensions for each underground piece 
         int  curLevel = 0;

        public int CurLevel
        {
            get { return curLevel; }
            set { curLevel = value; }
        }

        public Texture2D CurLevelTexture
        {
            get { return curLevelTexture; }
            set { curLevelTexture = value; }

        }

        public LevelManager(ContentManager cont)
        {
           // int count = 1;
          
  
         //   levelBackgrounds.Add(cont.Load<Texture2D>(path + count.ToString()));
          //  count++;
          
        }


        public void LoadNextLevel()  //This Loads the next level
        {
            //  if(curLevel < levelBackgrounds.Count) curLevel++;
         //  curLevelTexture = levelBackgrounds[curLevel];
        }



Content loads : 

   // MAPS 
            
            upperground = Content.Load<Texture2D>("Maps\\1.png");
            palace = Content.Load<Texture2D>("Maps\\palace.png");
            underTunnel = Content.Load<Texture2D>("Maps\\underTunnel.png");



Attributes: 


        //loading in pieces of underground map
        Texture2D one1;
        Texture2D one2;
        Texture2D one3;

        Texture2D two1;
        Texture2D two2;
        Texture2D two3;

        Texture2D three1;
        Texture2D three2;
        Texture2D three3;

        // load for other mapz 

        Texture2D upperground;
        Texture2D underTunnel;
        Texture2D palace;

        List<Texture2D> undergroundmaplist = new List<Texture2D>();
